import com.android.builder.core.DefaultManifestParser

apply plugin: 'com.android.application'
apply plugin: 'bugly'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    //tencent bugly config,http://bugly.qq.com/
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.tencent.bugly:crashreport:1.2.7'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.android.support:design:23.1.1'
    compile 'io.reactivex:rxjava:1.0.16'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.retrofit:adapter-rxjava:2.0.0-beta2'
    compile 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    compile 'com.squareup.okhttp:logging-interceptor:2.6.0'
    //retrofit 2.0自动依赖gson和okhttp
//    compile 'com.google.code.gson:gson:2.3.1'
//    compile 'com.squareup.okhttp:okhttp:2.6.0'
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "com.zhaoyan.ladderball"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        ReleaseKey {
            keyAlias 'LadderBall'
            keyPassword 'zhaoyantech'
            storeFile file('keystore/ladderball.jks')
            storePassword 'zhaoyantech'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.ReleaseKey
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // minifyEnabled和shrinkResources一同使用，用于去除没有使用的资源
            shrinkResources true
            debuggable false
            zipAlignEnabled true
        }
        debug {
            signingConfig signingConfigs.ReleaseKey
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            debuggable true
        }
    }
}

//打包后自动将生产的apk重命名以及保存到指定目录
//第一步：获取app版本号
def getAppVersionNameFromManifest() {
    def manifestParser = new DefaultManifestParser();
    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile);
}

//第二步：修改apk名称和路径
android.applicationVariants.all { variant ->
    def buildType = "${variant.name}";
    def versionName = "${android.defaultConfig.versionName}";
    variant.outputs[0].outputFile = file("$project.buildDir/outputs/LadderBall"
            + buildType
            + "/LadderBall_"
            + versionName
            + ".apk")
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

// assembleRelease之后，执行发布版本任务
assembleRelease << {
    ladderBallRelease.execute()
}

task ladderBallRelease(type: org.gradle.api.tasks.Copy) {
    println("ladderballRelease")
    from 'build/outputs/LadderBallRelease'
    into 'build/outputs/release'
    include '*.apk'
    exclude { apkFile ->
        apkFile.file.name.contains('unaligned')
    }
    rename '.apk', "_" + getDate() + ".apk"
}

// assembleDebug，执行发布Debug版本任务
assembleDebug << {
    ladderBallDebug.execute()
}

task ladderBallDebug(type: org.gradle.api.tasks.Copy) {
    println("ladderballDebug")
    from 'build/outputs/LadderBallDebug'
    into 'build/outputs/debug'
    include '*.apk'
    exclude { apkFile ->
        apkFile.file.name.contains('unaligned')
    }
    rename '.apk', "_" + getDate() + "_debug.apk"
}

bugly {
    appId = '900014118'
    appKey = 'TKU3zRxNL7crQVcb'
}

